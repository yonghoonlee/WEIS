$schema: "http://json-schema.org/draft-07/schema#"
$id: WEIS_add-ons_geom
title: WEIS geometry ontology add-ons beyond WISDEM ontology
description: Ontology definition for wind turbines as defined in WP1 of IEA Wind Task 37 - Phase II
type: object
properties:
    actuators:
        type: object
        required:
            - pitch
            - generator
        optional:
            # in avrSWAP, but not used as much
            - yaw   # rate
            # not currently in OpenFAST/avrSWAP
            - tower_TMD
            - hull_TMD
            - active_tension
            - passive_weather_vane  # not sure what this is, project?
            - passive_buoy_can
            - hss_brake
        properties:
            pitch:
                type: object
                required:
                    - pitch_act_bw
                    - max_pitch_rate
                    - fine_pitch         # maybe take out and put in control part
                    - max_pitch         # DZ to Pietro: what if some things we can easily set to defaults, like this
                    - min_pitch         # not sure this is required, seems extra
                properties:
                    fine_pitch:         # DZ: changed from pitch, might want to go in pitch control
                        type: number
                        description: Optimal pitch angle of the wind turbine. As default, it is maintained constant in region II.
                        unit: rad
                        minimum: -10
                        maximum: 10
                    max_pitch_rate:
                        type: number
                        description: Maximum pitch rate of the rotor blades.
                        unit: rad/s
                        minimum: 0
                        maximum: 0.2
                    pitch_act_bw:
                        type: number
                        description: Bandwidth of 2nd order LPF representing pitch actuators
                        unit: rad/s
                        minimum: 0
                        maximum: 100
                    max_pitch:
                        type: number
                        description: Maximum pitch angle, where the default is 90 degrees. It is used by the ROSCO controller (https://github.com/NREL/ROSCO)
                        unit: rad
                        minimum: 0
                        maximum: 2.
                    min_pitch:
                        type: number
                        description: Minimum pitch angle, where the default is 0 degrees. It is used by the ROSCO controller (https://github.com/NREL/ROSCO)
                        unit: rad
                        minimum: -0.5
                        maximum: 1.
            generator:
                type: object
                required:
                    - rated_power
                    - max_torque_rate
                    - max_gen_speed
                properties:
                    rated_power:
                        type: number
                        description: Nameplate power of the turbine, i.e. the rated electrical output of the generator.
                        unit: W
                        minimum: 0
                    max_gen_speed:
                        type: number
                        description: Maximum generator speed of the wind turbine.
                        unit: rad/s
                        minimum: 0
                        maximum: 10
                    max_torque_rate:
                        type: number
                        description: Maximum torque rate of the wind turbine generator.
                        unit: Nm/s
                        minimum: 1000
                        maximum: 100000000

            tower_TMD:
                type: object
                # required:
                # properties:
            hull_TMD:
                type: object
                # required:
                # properties:
            active_tension:
                type: object
                # required:
                # properties:
            passive_weather_vane:
                type: object
                # required:
                # properties:
            passive_buoy_can:
                type: object
                # required:
                # properties:
            hss_brake:
                type: object
                required:
                    - start_time
                    - duration
                    - torque
                properties:
                    start_time:
                        type: number
                        minimum: 0
                        unit: seconds
                        description: Time in simulation that brake is activated, THSSBrDp in OpenFAST
                    duration:
                        type: number
                        minimum: 0
                        unit: seconds
                        description: Time for HSS-brake to reach full deployment once initiated (sec), HSSBrDT in OpenFAST
                    torque:
                        type: number
                        minimum: 0
                        unit: N-m
                        description: Fully deployed HSS-brake torque, HSSBrTqF in OpenFAST
    control:
        type: object
        required:
            - supervisory
            - pitch
            - torque
        optional:
            - dac
            - setpoint_smooth
            - shutdown     # might need to be required?
            - yaw
            - power_control
            - freq_avoidance
            - soft_cut_out
            - user_defined_mods
            - user_defined_OL
            - user_dylib
            - user_simulink
            - user_defined_SS_1
            - user_defined_SS_2
            - user_defined_SS_3
            - user_defined_SS_4
            - user_defined_SS_5
            - user_defined_TF_1
            - user_defined_TF_2
            - user_defined_TF_3
            - user_defined_TF_4
            - user_defined_TF_5
            - user_defined_OL_1
            - user_defined_OL_2
            - user_defined_OL_3
            - user_defined_OL_4
            - user_defined_OL_5
        properties:
            supervisory:
                type: object
                required:
                    - Vin
                    - Vout
                    - maxTS
                properties:
                    Vin:
                        type: number
                        description: Cut-in wind speed of the wind turbine.
                        unit: m/s
                        minimum: 0
                        maximum: 10
                    Vout:
                        type: number
                        description: Cut-out wind speed of the wind turbine.
                        unit: m/s
                        minimum: 0
                        maximum: 50
                    maxTS:
                        type: number
                        description: Maximum allowable blade tip speed.
                        unit: m/s
                        minimum: 60
                        maximum: 120

            pitch:
                type: object
                required:
                    - PC_omega
                    - PC_zeta
                optional:
                    - ps_percent
                    - fl_feedback
                    - OL_BP  # open loop placeholder
                    - IPC
                properties:
                    PC_omega:
                        type: number
                        description: Pitch controller desired natural frequency. It is used by the ROSCO controller (https://github.com/NREL/ROSCO)
                        unit: rad/s
                        minimum: 0
                        maximum: 5

                    PC_zeta:
                        type: number
                        description: Pitch controller desired damping ratio. It is used by the ROSCO controller (https://github.com/NREL/ROSCO)
                        unit: none
                        minimum: 0
                        maximum: 5

                    ps_percent:
                        type: number
                        description: Percent peak shaving. It is used by the ROSCO controller (https://github.com/NREL/ROSCO)
                        unit: none
                        minimum: 0
                        maximum: 1

                    fl_feedback:
                        type: object
                        description: Platform velocity feedback using nacelle IMU
                        required:
                            - gain
                        optional:
                            - filter
                        properties:
                            gain:
                                type: number
                                description: Platform velocity feedback gain used by the ROSCO controller (https://github.com/NREL/ROSCO)
                                unit: seconds
                            filter:
                                $ref: "#/definitions/filter"
                                description: Nacelle IMU filter, used to remove tower natural frequency.  Usually a LPF or Notch Filter

                    twr_feedback:
                        type: object
                        description: Tower velocity feedback using nacelle IMU
                        required:
                            - gain
                        optional:
                            - filter
                        properties:
                            gain:
                                type: number
                                description: Tower velocity feedback gain used by the ROSCO controller (https://github.com/NREL/ROSCO)
                                unit: seconds
                            filter:
                                $ref: "#/definitions/filter"
                                description: Nacelle IMU filter, used to remove noise or amplify tower load.  Usually a HPF or Inverted Notch Filter
                    IPC:
                        type: object
                        description: Individual pitch control (IPC) using the mulitblade coordinate (MBC) transform
                        required:
                            - IPC_gain_1P
                        optional:
                            - IPC_gain_2P
                            - IPC_phase_1P
                            - IPC_phase_2P
                            - IPC_filt_1P
                            - IPC_filt_2P
                        properties:
                            IPC_gain_1P:
                                type: number
                                description: Integral gain of 1P feedback
                                unit: rad/Nm
                                minimum: 0
                            IPC_gain_2P:
                                type: number
                                description: Integral gain of 2P feedback
                                unit: rad/Nm
                                minimum: 0
                            IPC_phase_1P:
                                type: number
                                description: Phase lag of 1P IPC feedback
                                unit: rad
                                minimum: -3.14
                                maximum: 3.14
                            IPC_phase_2P:
                                type: number
                                description: Phase lag of 2P IPC feedback
                                unit: rad
                                minimum: -3.14
                                maximum: 3.14
                            IPC_filt_1P:
                                $ref: "#/definitions/filter"
                                description: Filter between tilt/yaw load and tilt/yaw pitch, usually a notch to reduce 3P, 6P frequency.
                            IPC_filt_2P:
                                $ref: "#/definitions/filter"
                                description: Filter between tilt/yaw load and tilt/yaw pitch, usually a notch to reduce 3P, 6P frequency.

            torque:
                type: object
                required:
                    - control_type
                    - tsr
                    - VS_zeta
                    - VS_omega      # DZ: I'm not sure how "required" these are or where the line is around "strongly encouraged"
                    - VS_minspd
                properties:
                    control_type:
                        type: string
                        description:  Type of torque control used.
                        enum:
                            - tsr_tracking
                            - legacy
                            - pi_transitions
                    tsr:
                        type: number
                        description: Rated tip speed ratio of the wind turbine. As default, it is maintained constant in region II.
                        unit: none
                        minimum: 0
                        maximum: 15
                    VS_zeta:
                        type: number
                        description: Torque controller desired damping ratio. It is used by the ROSCO controller (https://github.com/NREL/ROSCO)
                        unit: none
                        minimum: 0
                        maximum: 5
                    VS_omega:
                        type: number
                        description: Torque controller desired natural frequency. It is used by the ROSCO controller (https://github.com/NREL/ROSCO)
                        unit: rad/s
                        minimum: 0
                        maximum: 5
                    VS_minspd:
                        type: number
                        description: Minimum rotor speed. It is used by the ROSCO controller (https://github.com/NREL/ROSCO)
                        unit: rad/s
                        minimum: 0
                        maximum: 5
                    VS_maxspd:
                        type: number
                        description: Maximum rotor speed. It is used by the ROSCO controller (https://github.com/NREL/ROSCO)
                        unit: rad/s
                        minimum: 0
                        default: 10.

            setpoint_smooth:
                type: object
                required:
                    - ss_vsgain
                    - ss_pcgain
                properties:
                    ss_vsgain:
                        type: number
                        description: Torque controller setpoint smoother gain bias percentage. It is used by the ROSCO controller (https://github.com/NREL/ROSCO)
                        unit: none
                        minimum: 0
                        maximum: 1
                    ss_pcgain:
                        type: number
                        description: Pitch controller setpoint smoother gain bias percentage. It is used by the ROSCO controller (https://github.com/NREL/ROSCO)
                        unit: none
                        minimum: 0
                        maximum: 1

            shutdown:
                type: object
                description: Turbine shutdown control, when a certain limit is reached
                required:
                    - limit_type
                    - limit_value
                optional:
                    - pitch_rate
                    - open_loop_pitch
                    - open_loop_pwr
                properties:
                    limit_type:
                        type: string
                        description: What value is used to trigger shutdown procedure
                        enum:
                            - time
                            - pitch
                            - yaw
                            - gen_speed
                            - wind_speed
                            - plt_pitch
                            - nac_IMU
                    limit_value:
                        type: number
                        description: When limit_type > limit_value, shutdown is initiated  # all the limit_types are greater than limits...but I suppose there could be less than limits
                    pitch_rate:
                        type: number
                        description: Rate of pitch manuever to max_pitch. Default is 2 deg./s ?
                        units: rad/s
                        minimum: 0
                        maximum: 0.2  # Technically, actuators/pitch/max_pitch_rate
                    open_loop_pitch:
                        type: object
                        required:
                            - time
                            - pitch
                        properties:
                            time:
                                $ref: "#/definitions/timeseries/time"
                            pitch:
                                $ref: "#/definitions/timeseries/value"
                    open_loop_pwr:
                        required:
                            - time
                            - power
                        properties:
                            time:
                                $ref: "#/definitions/timeseries/time"
                            power:
                                $ref: "#/definitions/timeseries/value"

            wind_speed_estimator:
                type: object
                description: Extended Kalman filter implementation of wind speed estimator
                optional:
                    - gen_process_noise
                    - turb_intensity
                    - turb_length_scale
                properties:
                    gen_process_noise:
                        type: number
                        description: Process noise for EKF generator speed state, Default = 1e-5
                        minimum: 0
                        maximum: 0.001
                    turb_intensity:
                        type: number
                        description: Turbulence intensity defined in usual way, parameterizes EKF process noise for wind, Default = 0.14
                        minimum: 0
                        maximum: 0.5
                    turb_length_scale:
                        type: number
                        description: Turbulence length scale, parameterizes EKF process noise for wind, Defulat = 3 * TurbineDiameter
                        minimum: 0
                        maximum: 1000

            yaw:
                type: object
                description: Yaw control for changing wind direction or steady offset as implemented by ROSCO # there is a new method here, but using old one for now
                required:
                    - yaw_error_thresh
                    - yaw_filt_fast
                    - yaw_filt_slow
                    - yaw_rate
                properties:
                    yaw_error_thresh:
                        type: number
                        description: Yaw error threshold, Turbine begins to yaw when it passes this
                        unit: rad^2 s
                        minimum: 0
                    yaw_filt_fast:
                        type: number
                        description: Corner frequency for fast low pass filter, Default = 1.0 Hz
                        unit: rad/s
                        minimum: 0.000001
                    yaw_filt_slow:
                        type: number
                        description: Corner frequency for slow low pass filter, Default = 1/60 Hz
                        unit: rad/s
                        minimum: 0.000000001
                    yaw_rate:
                        type: number
                        description: Yaw rate when changing yaw
                        unit: rad/s
                        minimum: 0

            power_control:
                type: object
                required:
                    - method
                optional:
                    - OL_R
                    - reference_control
                properties:
                    method:
                        type: string
                        description: Method used to control power output, generator speed only for now.
                        enum:
                            - gen_speed
                    OL_R:
                        description: Open loop power reference, for soft start-up, etc.
                        $ref: "#/definitions/timeseries"
                    reference_control:
                        type: object
                        description: Control power reference R
                        required:
                            - method
                        optional:
                            - const_gen_est
                            - const_gen_lim
                            - const_gen_gain
                            - const_plt_est
                            - const_plt_lim
                            - const_plt_gain
                        properties:
                            method:
                                type: string
                                description: Method of controlling power reference R
                                enum:
                                    - constrained_ref_control
                                    - open_loop_opt
                            const_gen_lim:
                                type: number
                                description: Generator speed limit to start de-rating
                                unit: rad/s
                                minimum: 0
                            const_gen_gain:
                                type: number
                                description: Gain for de-rating when gen speed > lim
                                minimum: 0
                                unit: (rad/s)^-1
                            const_gen_est:
                                type: number
                                description: Generator speed transient estimation gain
                                unit: (rad/m)
                                minimum: 0
                            const_plt_lim:
                                type: number
                                description: Platform pitch limit to start de-rating
                                minimum: 0
                                unit: rad
                            const_plt_gain:
                                type: number
                                description: Gain for de-rating when plt pitch > lim
                                minimum: 0
                                unit: (rad)^-1
                            const_plt_est:
                                type: number
                                description: Platform pitch transient estimation gain
                                minimum: 0
                                unit: (rad)/(m/s)

            freq_avoidance:
                type: object
                description: Changes generator speed setpoint to avoid turbine natural frequencies
                required:
                    - list_of_freqs
                optional:
                    - avoidance_param
                properties:
                    list_of_freqs:
                        type: array
                        description: List of frequencies to avoid
                        items:
                            type: number
                            unit: rad/s
                            minItems: 1
                            uniqueItems: true
                    avoidance_param:
                        type: array
                        description: Buffer speed around frequencies to avoid
                        items:
                            type: number
                            unit: rad/s
                            minItems: 1
                            uniqueItems: false

            soft_cut_out:
                type: object
                description: Upper limit of power reference at high wind speeds (lookup table)
                required:
                    - wind_speeds
                    - power_reference
                properties:
                    wind_speeds:
                        type: array
                        description: List of wind speeds
                        items:
                            type: number
                            unit: m/s
                            minItems: 1
                            uniqueItems: true
                    power_reference:
                        type: array
                        description: List of power reference at wind_speeds, number of elements should be same
                        items:
                            type: number
                            unit: (-)
                            minItems: 1
                            uniqueItems: false
            dac:
                type: object
                description: Control parameters for distributed aerodynamic control devices
                required:
                    - Flp_omega
                    - Flp_zeta
                properties:
                    Flp_omega:
                        type: number
                        description: Flap controller desired natural frequency. It is used by the ROSCO controller (https://github.com/NREL/ROSCO)
                        unit: rad/s
                        minimum: 0
                        maximum: 5
                    Flp_zeta:
                        type: number
                        description: Flap controller desired damping ratio. It is used by the ROSCO controller (https://github.com/NREL/ROSCO)
                        unit: none
                        minimum: 0
                        maximum: 5

            user_defined_SS_1: &uss
                type: object
                description: User defined state-space linear controllers within ROSCO, only 1 for now
                required:
                    - sensors
                    - actuators
                    - control_model
                optional:
                    - activator
                properties:
                    sensors:
                        type: array
                        description: List of sensors used as control inputs, could be any OpenFAST output(?)  # DZ: within ROSCO, probably not...needs to be in avrSWAP
                        items:
                            sensor:
                                $ref: "#/definitions/sensor"
                    actuators:
                        type: array
                        description: List of actuators used as control outputs
                        items:
                            actuator:
                                $ref: "#/definitions/actuator"
                    control_model:
                        type: object
                        description: Linear model of controller in state-space form # MIMO harder to clearly define in transfer function form
                        $ref: "#/definitions/state_space"
                    activator:
                        $ref: "#/definitions/activator"
            user_defined_SS_2: *uss
            user_defined_SS_3: *uss
            user_defined_SS_4: *uss
            user_defined_SS_5: *uss
            user_defined_TF_1: &u_tf
                type: object
                description: User defined transfer function linear controllers within ROSCO, only 1 for now
                required:
                    - sensor
                    - actuator
                    - control_model
                optional:
                    - activator
                properties:
                    sensor:
                        $ref: "#/definitions/sensor"
                    actuator:
                        $ref: "#/definitions/actuator"
                    control_model:
                        type: object
                        description: Linear model of controller in transfer function form, SISO only # MIMO harder to clearly define in transfer function form
                        $ref: "#/definitions/filter/filt_def/user_defined"
                    activator:
                        $ref: "#/definitions/activator"
            user_defined_TF_2: *u_tf
            user_defined_TF_3: *u_tf
            user_defined_TF_4: *u_tf
            user_defined_TF_5: *u_tf
            user_defined_OL_1: &u_ol
                type: object
                desctiption: User defined open loop signal to a defined actuator, only 1 for now
                required:
                    - actuator
                    - timeseries
                optional:
                    - optimize
                properties:
                    actuator:
                        $ref: "#/definitions/actuator"
                    timeseries:
                        $ref: "#/definitions/timeseries"
            user_defined_OL_2: *u_ol
            user_defined_OL_3: *u_ol
            user_defined_OL_4: *u_ol
            user_defined_OL_5: *u_ol
            user_dylib:
                type: object
                description: User defined dynamic library. # Not sure how to define parameters/input
                required:
                    - dylib
                optional:
                    - dylib_input
                properties:
                    dylib:
                        type: string
                        description: Dynamic library file path & name
                    dylib_input:
                        type: string
                        description: Dynamic library file input

            user_simulink:
                type: object
                description: User defined simulink model
                required:
                    - simulink_model
                    - matlab_path
                optional:
                    - sim_param_file
                properties:
                    simulink_model:
                        type: string
                        description: Path to simulink model
                    matlab_path:
                        type: string
                        description: Path to matlab executable
                    sim_param_file:
                        type: string
                        description: Path to matlab script with simulation parameters
    environment:
        type: object
        required:
            - air_density
            - air_dyn_viscosity
            - air_speed_sound
            - shear_exp
        optional:
            - gravity
            - weib_shape_parameter
            - water_density
            - water_dyn_viscosity
            - water_depth
            - soil_shear_modulus
            - soil_poisson
            - air_pressure
            - air_vapor_pressure
        properties:
            gravity:
                type: number
                description: Gravitational acceleration
                unit: m/s/s
                minimum: 0
                maximum: 100.0
                default: 9.80665
            air_density:
                type: number
                description: Density of air.
                unit: kg/m3
                minimum: 0
                maximum: 1.5
                default: 1.225
            air_dyn_viscosity:
                type: number
                description: Dynamic viscosity of air.
                unit: kg/(ms)
                minimum: 0
                maximum: 2.e-5
                default: 1.81e-5
            air_pressure:
                type: number
                description: Atmospheric pressure of air
                unit: kg/(ms^2)
                minimum: 0
                maximum: 1.e+6
                default: 1.035e+5
            air_vapor_pressure:
                type: number
                description: Vapor pressure of fluid
                unit: kg/(ms^2)
                minimum: 0
                maximum: 1.e+6
                default: 1.7e+3
            weib_shape_parameter:
                type: number
                description: Shape factor of the Weibull wind distribution.
                unit: none
                minimum: 1
                maximum: 3
                default: 2.
            air_speed_sound:
                type: number
                description: Speed of sound in air.
                unit: m/s
                minimum: 330.
                maximum: 350.
                default: 340.
            shear_exp:
                type: number
                description: Shear exponent of the atmospheric boundary layer.
                unit: none
                minimum: 0
                maximum: 1
                default: 0.2
            water_density:
                type: number
                description: Density of water.
                unit: kg/m3
                minimum: 950
                maximum: 1100
                default: 1025.0
            water_dyn_viscosity:
                type: number
                description: Dynamic viscosity of water.
                unit: kg/(ms)
                minimum: 1.e-3
                maximum: 2.e-3
                default: 1.3351e-3
            water_depth:
                type: number
                description: Water depth for offshore environment.
                unit: m
                minimum: 0.0
                maximum: 1.e+4
                default: 0.0
            soil_shear_modulus:
                type: number
                description: Shear modulus of the soil.
                unit: Pa
                minimum: 100.e+6
                maximum: 200.e+6
                default: 140.e+6
            soil_poisson:
                type: number
                description: Poisson ratio of the soil.
                unit: none
                minimum: 0
                maximum: 0.6
                default: 0.4
definitions:
    distributed_data:
        grid_nd:
            type: array
            description: Grid along a beam expressed non-dimensional from 0 to 1
            items:
                type: number
                unit: none
                minItems: 2
                minimum: 0.0
                maximum: 1.0
                uniqueItems: true
        grid_al:
            type: array
            description: Grid along an arc length, expressed non dimensionally where 0 is the leading edge, -1 is the trailing edge on the pressure side and +1 the trailing edge on the pressure side
            items:
                type: number
                unit: none
                minItems: 2
                minimum: -1.0
                maximum: 1.0
                uniqueItems: true
        grid_aoa:
            type: array
            description: Grid of angles of attack to describe polars
            items:
                type: number
                unit: radians
                minItems: 2
                minimum: -3.14159265359
                maximum:  3.14159265359
                uniqueItems: true
        polar_coeff:
            type: array
            description: Lift, drag and moment coefficients
            items:
                type: number
                unit: none
                minItems: 2
                uniqueItems: false
        strings:
            type: array
            items:
                type: string
                minItems: 2
                uniqueItems: false
        nd:
            type: array
            description: Non dimensional quantity described along a beam and expressed non-dimensional
            items:
                type: number
                unit: none
                minItems: 2
                uniqueItems: false
        length:
            type: array
            description: Length quantity described along a beam, expressed in meter
            items:
                type: number
                unit: meter
                minItems: 2
                uniqueItems: false
        angle:
            type: array
            description: Angle quantity along a beam, expressed in radians
            items:
                type: number
                unit: radians
                minItems: 2
                uniqueItems: false
        mass_length:
            type: array
            description: Mass per unit length along a beam, expressed in kilogram per meter
            items:
                type: number
                unit: kg/m
                minItems: 2
                uniqueItems: false
        area:
            type: array
            description: Cross sectional area along a beam, expressed in meter squared
            items:
                type: number
                unit: m2
                minItems: 2
                uniqueItems: false
                description: Cross sectional area
        elast_mod:
            type: array
            description: Modulus of elasticity of a material along a beam, expressed in Newton over meter squared
            items:
                type: number
                unit: N m2
                minItems: 2
                uniqueItems: false
                description: Modulus of elasticity
        shear_mod:
            type: array
            description: Shear modulus of elasticity of a material along a beam, expressed in Newton over meter squared
            items:
                type: number
                unit: N/m2
                minItems: 2
                uniqueItems: false
                description: Shear modulus of elasticity
        area_moment:
            type: array
            description: Area moment of inertia of a section along a beam, expressed in meter to the power of four
            items:
                type: number
                unit: m4
                minItems: 2
                uniqueItems: false
                description: Area moment of inertia
        mass_moment:
            type: array
            description: Mass moment of inertia of a section along a beam, expressed in kilogram times meter squared per meter
            items:
                type: number
                unit: kg*m2/m
                minItems: 2
                uniqueItems: false
                description: Mass moment of inertia per unit span
        tors_stiff_const:
            type: array
            description: Torsional stiffness constant with respect to ze axis at the shear center [m4/rad]. For a circular section only this is identical to the polar moment of inertia
            items:
                type: number
                unit: m4/rad
                minItems: 2
                uniqueItems: false
        shear_stiff:
            type: array
            description: Shearing stiffness along the beam
            items:
                type: number
                unit: N
                minItems: 2
                uniqueItems: false
        axial_stiff:
            type: array
            description: Axial stiffness EA along the beam
            items:
                type: number
                unit: N
                minItems: 2
                uniqueItems: false
        bending_stiff:
            type: array
            description: Bending stiffness E11-E22 along the beam
            items:
                type: number
                unit: N/m2
                minItems: 2
                uniqueItems: false
        tors_stiff:
            type: array
            description: Torsional stiffness GJ along the beam
            items:
                type: number
                unit: N/m2
                minItems: 2
                uniqueItems: false
        nd_arc_position:
            type: object
            description: non-dimensional location of the point along the non-dimensional arc length
            properties:
                grid:
                    $ref: "#/definitions/distributed_data/grid_nd"
                values:
                    $ref: "#/definitions/distributed_data/grid_al"
                fixed:
                    type: string
                    description: Name of the layer to lock the edge
        offset:
            type: object
            description: dimensional offset in respect to the pitch axis along the x axis, which is the chord line rotated by a user-defined angle. Negative values move the midpoint towards the leading edge, positive towards the trailing edge
            required:
                - grid
                - values
            properties:
                grid:
                    $ref: "#/definitions/distributed_data/grid_nd"
                values:
                    $ref: "#/definitions/distributed_data/length"
        rotation:
            type: object
            description: rotation of the chord axis around the pitch axis
            properties:
                grid:
                    $ref: "#/definitions/distributed_data/grid_nd"
                values:
                    $ref: "#/definitions/distributed_data/angle"
                fixed:
                    type: string
                    description: Name of the layer to lock the edge
        axis_coordinates:
            type: object
            description: The reference system is located at blade root, with z aligned with the pitch axis, x pointing towards the suction sides of the airfoils (standard prebend will be negative) and y pointing to the trailing edge (standard sweep will be positive)
            required:
                - x
                - y
                - z
            properties:
                x:
                    type: object
                    required:
                        - grid
                        - values
                    properties:
                        grid:
                            $ref: "#/definitions/distributed_data/grid_nd"
                        values:
                            $ref: "#/definitions/distributed_data/length"
                y:
                    type: object
                    required:
                        - grid
                        - values
                    properties:
                        grid:
                            $ref: "#/definitions/distributed_data/grid_nd"
                        values:
                            $ref: "#/definitions/distributed_data/length"
                z:
                    type: object
                    required:
                        - grid
                        - values
                    properties:
                        grid:
                            $ref: "#/definitions/distributed_data/grid_nd"
                        values:
                            $ref: "#/definitions/distributed_data/length"
    beam:
        timoschenko_hawc:
            type: object
            description: Timoschenko beam as in HAWC2
            required:
                - reference_axis
                - A
                - E
                - G
                - I_x
                - I_y
                - K
                - dm
                - k_x
                - k_y
                - pitch
                - ri_x
                - ri_y
                - x_cg
                - x_e
                - x_sh
                - y_cg
                - y_e
                - y_sh
            properties:
                reference_axis:
                    $ref: "#/definitions/distributed_data/axis_coordinates"
                A:
                    type: object
                    required:
                        - grid
                        - values
                    properties:
                        grid:
                            $ref: "#/definitions/distributed_data/grid_nd"
                        values:
                            $ref: "#/definitions/distributed_data/area"
                E:
                    type: object
                    required:
                        - grid
                        - values
                    properties:
                        grid:
                            $ref: "#/definitions/distributed_data/grid_nd"
                        values:
                            $ref: "#/definitions/distributed_data/elast_mod"
                G:
                    type: object
                    required:
                        - grid
                        - values
                    properties:
                        grid:
                            $ref: "#/definitions/distributed_data/grid_nd"
                        values:
                            $ref: "#/definitions/distributed_data/shear_mod"
                I_x:
                    type: object
                    required:
                        - grid
                        - values
                    properties:
                        grid:
                            $ref: "#/definitions/distributed_data/grid_nd"
                        values:
                            $ref: "#/definitions/distributed_data/area_moment"
                I_y:
                    type: object
                    required:
                        - grid
                        - values
                    properties:
                        grid:
                            $ref: "#/definitions/distributed_data/grid_nd"
                        values:
                            $ref: "#/definitions/distributed_data/area_moment"
                K:
                    type: object
                    required:
                        - grid
                        - values
                    properties:
                        grid:
                            $ref: "#/definitions/distributed_data/grid_nd"
                        values:
                            $ref: "#/definitions/distributed_data/tors_stiff_const"
                dm:
                    type: object
                    required:
                        - grid
                        - values
                    properties:
                        grid:
                            $ref: "#/definitions/distributed_data/grid_nd"
                        values:
                            $ref: "#/definitions/distributed_data/mass_length"
                k_x:
                    type: object
                    required:
                        - grid
                        - values
                    properties:
                        grid:
                            $ref: "#/definitions/distributed_data/grid_nd"
                        values:
                            $ref: "#/definitions/distributed_data/nd"
                k_y:
                    type: object
                    required:
                        - grid
                        - values
                    properties:
                        grid:
                            $ref: "#/definitions/distributed_data/grid_nd"
                        values:
                            $ref: "#/definitions/distributed_data/nd"
                pitch:
                    type: object
                    required:
                        - grid
                        - values
                    properties:
                        grid:
                            $ref: "#/definitions/distributed_data/grid_nd"
                        values:
                            $ref: "#/definitions/distributed_data/angle"
                ri_x:
                    type: object
                    required:
                        - grid
                        - values
                    properties:
                        grid:
                            $ref: "#/definitions/distributed_data/grid_nd"
                        values:
                            $ref: "#/definitions/distributed_data/length"
                ri_y:
                    type: object
                    required:
                        - grid
                        - values
                    properties:
                        grid:
                            $ref: "#/definitions/distributed_data/grid_nd"
                        values:
                            $ref: "#/definitions/distributed_data/length"
                x_cg:
                    type: object
                    required:
                        - grid
                        - values
                    properties:
                        grid:
                            $ref: "#/definitions/distributed_data/grid_nd"
                        values:
                            $ref: "#/definitions/distributed_data/length"
                x_e:
                    type: object
                    required:
                        - grid
                        - values
                    properties:
                        grid:
                            $ref: "#/definitions/distributed_data/grid_nd"
                        values:
                            $ref: "#/definitions/distributed_data/length"
                x_sh:
                    type: object
                    required:
                        - grid
                        - values
                    properties:
                        grid:
                            $ref: "#/definitions/distributed_data/grid_nd"
                        values:
                            $ref: "#/definitions/distributed_data/length"
                y_cg:
                    type: object
                    required:
                        - grid
                        - values
                    properties:
                        grid:
                            $ref: "#/definitions/distributed_data/grid_nd"
                        values:
                            $ref: "#/definitions/distributed_data/length"
                y_e:
                    type: object
                    required:
                        - grid
                        - values
                    properties:
                        grid:
                            $ref: "#/definitions/distributed_data/grid_nd"
                        values:
                            $ref: "#/definitions/distributed_data/length"
                y_sh:
                    type: object
                    required:
                        - grid
                        - values
                    properties:
                        grid:
                            $ref: "#/definitions/distributed_data/grid_nd"
                        values:
                            $ref: "#/definitions/distributed_data/length"
        cp_lambda_beam:
            type: object
            description: Geometrically exact beams with simplified properties
            required:
                - reference_axis
                - T11
                - T22
                - EA
                - E11
                - E22
                - GJ
                - x_ce
                - y_ce
                - dm
                - delta_theta
                - x_sh
                - y_sh
                - J1
                - J2
                - J3
                - x_cg
                - y_cg
            properties:
                reference_axis:
                    $ref: "#/definitions/distributed_data/axis_coordinates"
                T11:
                    type: object
                    required:
                        - grid
                        - values
                    properties:
                        grid:
                            $ref: "#/definitions/distributed_data/grid_nd"
                        values:
                            $ref: "#/definitions/distributed_data/shear_stiff"
                T22:
                    type: object
                    required:
                        - grid
                        - values
                    properties:
                        grid:
                            $ref: "#/definitions/distributed_data/grid_nd"
                        values:
                            $ref: "#/definitions/distributed_data/shear_stiff"
                EA:
                    type: object
                    required:
                        - grid
                        - values
                    properties:
                        grid:
                            $ref: "#/definitions/distributed_data/grid_nd"
                        values:
                            $ref: "#/definitions/distributed_data/axial_stiff"
                E11:
                    type: object
                    required:
                        - grid
                        - values
                    properties:
                        grid:
                            $ref: "#/definitions/distributed_data/grid_nd"
                        values:
                            $ref: "#/definitions/distributed_data/bending_stiff"
                E22:
                    type: object
                    required:
                        - grid
                        - values
                    properties:
                        grid:
                            $ref: "#/definitions/distributed_data/grid_nd"
                        values:
                            $ref: "#/definitions/distributed_data/bending_stiff"
                GJ:
                    type: object
                    required:
                        - grid
                        - values
                    properties:
                        grid:
                            $ref: "#/definitions/distributed_data/grid_nd"
                        values:
                            $ref: "#/definitions/distributed_data/tors_stiff"
                x_ce:
                    type: object
                    required:
                        - grid
                        - values
                    properties:
                        grid:
                            $ref: "#/definitions/distributed_data/grid_nd"
                        values:
                            $ref: "#/definitions/distributed_data/length"
                y_ce:
                    type: object
                    required:
                        - grid
                        - values
                    properties:
                        grid:
                            $ref: "#/definitions/distributed_data/grid_nd"
                        values:
                            $ref: "#/definitions/distributed_data/length"
                dm:
                    type: object
                    required:
                        - grid
                        - values
                    properties:
                        grid:
                            $ref: "#/definitions/distributed_data/grid_nd"
                        values:
                            $ref: "#/definitions/distributed_data/mass_length"
                delta_theta:
                    type: object
                    required:
                        - grid
                        - values
                    properties:
                        grid:
                            $ref: "#/definitions/distributed_data/grid_nd"
                        values:
                            $ref: "#/definitions/distributed_data/angle"
                x_sh:
                    type: object
                    required:
                        - grid
                        - values
                    properties:
                        grid:
                            $ref: "#/definitions/distributed_data/grid_nd"
                        values:
                            $ref: "#/definitions/distributed_data/length"
                y_sh:
                    type: object
                    required:
                        - grid
                        - values
                    properties:
                        grid:
                            $ref: "#/definitions/distributed_data/grid_nd"
                        values:
                            $ref: "#/definitions/distributed_data/length"
                J1:
                    type: object
                    required:
                        - grid
                        - values
                    properties:
                        grid:
                            $ref: "#/definitions/distributed_data/grid_nd"
                        values:
                            $ref: "#/definitions/distributed_data/mass_moment"
                J2:
                    type: object
                    required:
                        - grid
                        - values
                    properties:
                        grid:
                            $ref: "#/definitions/distributed_data/grid_nd"
                        values:
                            $ref: "#/definitions/distributed_data/mass_moment"
                J3:
                    type: object
                    required:
                        - grid
                        - values
                    properties:
                        grid:
                            $ref: "#/definitions/distributed_data/grid_nd"
                        values:
                            $ref: "#/definitions/distributed_data/mass_moment"
                x_cg:
                    type: object
                    required:
                        - grid
                        - values
                    properties:
                        grid:
                            $ref: "#/definitions/distributed_data/grid_nd"
                        values:
                            $ref: "#/definitions/distributed_data/length"
                y_cg:
                    type: object
                    required:
                        - grid
                        - values
                    properties:
                        grid:
                            $ref: "#/definitions/distributed_data/grid_nd"
                        values:
                            $ref: "#/definitions/distributed_data/length"
        six_x_six:
            type: object
            required:
                - reference_axis
                - stiff_matrix
            properties:
                reference_axis:
                    $ref: "#/definitions/distributed_data/axis_coordinates"
                stiff_matrix:
                    type: object
                    required:
                        - grid
                        - values
                    properties:
                        grid:
                            $ref: "#/definitions/distributed_data/grid_nd"
                        values:
                            type: array
                            items:
                                type: array
                                description: Stiffness matrix 6x6, only upper diagonal reported line by line (21 elements), specified at each grid point
                                minItems: 21
                                maxItems: 21
                                uniqueItems: false

    actuator:
        type: string
        description: Actuator used as control output
        enum:
            - pitch
            - torque   #called generator above, keep consistent?
            - tower_TMD
            - hull_TMD
            - active_tension
            - passive_weather_vane
            - passive_buoy_can
    sensor:
        type: string
        description: Sensor used as control input, could be any OpenFAST output (in Simluink), enumerating avrSWAP now  # DZ: within ROSCO, probably not...needs to be in avrSWAP
        enum:
            - gen_speed
            - nac_IMU
            - wind_speed_estimate
            - gust_measure
            - RootMyc1
            - RootMyc2
            - RootMyc3
            - RootMyT   # MBC of above
            - RootMyY   # MBC of above
            - azimuth
            - YawBrTAxp
            - YawBrTAyp
            - RootMxc1
            - RootMxc2
            - RootMxc3
            - LSSTipMya
            - LSSTipMza
            - LSSTipMxa
            - LSSTipMys
            - LSSTipMzs
            - YawBrMyn
            - YawBrMzn
            - NcIMURAxs  # avrSWAP names don't always match OpenFAST output names
            - NcIMURAzs
            # No platform info from avrSWAP, will they be added?
    filter:
        type: object
        description: Linear filter, could be a LPF, HPF, NF, INF, or user_defined
        required:
            - filt_type
            - filt_def
        filt_type:
            type: string
            description: Type of filter used, could be a LPF, HPF, NF, INF, or user_defined
            enum:
                - LPF
                - HPF
                - NF
                - INF
                - user_defined
        filt_def:
            LPF:
                type: object
                description: Low pass filter
                required:
                    - omega
                    - order
                optional:
                    - damping
            HPF:
            NF:
            INF:
            user_defined:
                type: object
                description: User defined filter
                required:
                    - num
                    - den
                optional:
                    - dt
                num:
                    type: array
                    description: Numerator coefficients of linear filter
                    items:
                        type: number
                        unit: none
                        minItems: 0
                        uniqueItems: false
                den:
                    type: array
                    description: Numerator coefficients of linear filter
                    items:
                        type: number
                        unit: none
                        minItems: 1
                        uniqueItems: false
                dt:
                    type: number
                    description: Sampling rate of filter, -1 for continuous   # DZ: will probably convert all to dt of simulation... not sure how to handle this
                    minimum: -1

    state_space:
        type: object
        description: Linear state space model
        required:
            - ss_A
            - ss_B
            - ss_C
            - ss_D
        ss_A:
            type: array
            description: A matrix of linear state space model, flattened with n_states^2 elements
            items:
                type: number
                unit: none
                minItems: 1
                uniqueItems: false
        ss_B:
            type: array
            description: B matrix of linear state space model, flattened with n_states x n_inputs elements
            items:
                type: number
                unit: none
                minItems: 1
                uniqueItems: false
        ss_C:
            type: array
            description: C matrix of linear state space model, flattened with n_outputs x n_states elements
            items:
                type: number
                unit: none
                minItems: 1
                uniqueItems: false
        ss_D:
            type: array
            description: D matrix of linear state space model, flattened with n_outputs x n_inputs elements
            items:
                type: number
                unit: none
                minItems: 1
                uniqueItems: false
        # DZ: might be a good idea to check the number of states
        ss_dt:
            type: number
            description: Sampling rate of filter, -1 for continuous   # DZ: will probably convert all to dt of simulation... not sure how to handle this
            minimum: -1

    timeseries:
        type: object
        description: Array of time, value pairs  # DZ: can we check that the number of elements are equal?
        required:
            - time
            - value
        optional:
            - filename
        time:
            type: array
            description: Time in timeseries
            items:
                type: number
                unit: seconds
                minItems: 1
                uniqueItems: true   # probably?
        value:
            type: array
            description: Value in timeseries
            items:
                type: number
                unit: none  #any
                minItems: 1
                uniqueItems: false
                # can we check that number of elements are equal?
        filename:
            type: string
            description: Name of file with timeseries data

    activator:
        type: object
        description: Gain used to enable/disable control elements, can be used partially
        required:
            - wind_speeds
            - act_gain
        wind_speeds:
            type: array
            description: Array of wind speed breakpoints for activators
            items:
                type: number
                unit: m/s
                minItems: 1
                uniqueItems: true
        act_gain:
            type: array
            description: Array of gains from 0 to 1, enabling/disabling control element
            items:
                type: number
                unit: none
                minItems: 1
                uniqueItems: false
                minimum: 0
                maximum: 1
